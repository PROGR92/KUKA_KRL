&ACCESS RVO
&REL 44
&COMMENT Concept_v1
&PARAM DISKPATH = KRC:\R1\Program\R1
DEF offline_R1_toolactpos( )
;FOLD INI
  ;FOLD BASISTECH INI
    GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
    INTERRUPT ON 3 
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD USER INI
    ;Make your modifications here

  ;ENDFOLD (USER INI)
;ENDFOLD (INI)

;FOLD STRUKTURA PROGRAMU 
;OK Kontrola chwytaka

;OK Ruch nad stos

;OK Dojazd do momentu wykrycia ELEMENTU oraz zwolnienie

;OK Dojazd do elementu - Pobranie

;OK Test chwytaka

; Zalaczenie kontroli elementu w chwytaku

;OK Odjazd powoli ponad stos

;OK Odjazd szybkina bezpieczna wysokosc przejazdowa

; odpytanie strefy kolizyjnej
; PUNKTY TRANSPORTU nad odlozenie

; Dojazd do odlozenia

;Program odlozenia
;**************************************
; Otwarcie chwytaka i kontrola otwarcia

; Odjazd powolny nad zrzut sprawdzenie w locie czy chwytak jest pusty 

; Odjazd do punktu nad odlozeniem
;**************************************

; TEST STOSU 1(TEN) lub 2(INNY)

; GOTO LABEL1 OR GOTO LABEL2 
;endfold struktura programu 
$CYCFLAG[1] = $IN[145] OR $IN[146] ;i_LewyKant==$IN[146], i_PrawyKant $IN[145]   
;******************************************
INTERRUPT DECL 22 WHEN  i_Zatrzymaj == TRUE DO IR_MOVESTOP()    ;Zwolnienie podczas dojazdu do pobrania
INTERRUPT DECL 23 WHEN  i_Zwolnij == TRUE DO IR_SLOWDOWN()      ;Zatrzymanie wykryciem nacisku krancówki
INTERRUPT DECL 24 WHEN  i_Zwolnij == FALSE DO PART_CONTROL()    ;Zatrzymanie podczas transportu utrata sygnalu obecnosci czesci
INTERRUPT DECL 25 WHEN  $CYCFLAG[1] DO IR_MOVESTOP()         ;Stop dojazdu bocznego
INTERRUPT DECL 26 WHEN  i_LewyKant==TRUE DO IR_MOVESTOP()    ;Stop Rotacji
INTERRUPT DECL 27 WHEN  i_PrawyKant==TRUE DO IR_MOVESTOP()   ;Stop Rotacji
;******************************************

;FOLD ZMIANY:
;FOLD ; 29.11.21 09:57 NAME: ini CHANGES: zabezpieczenie zmiany orientacji w pobraniu ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.comments.datetimecomment; Kuka.DateTime=29.11.21 09:57; Kuka.Name=ini; Kuka.Content=zabezpieczenie zmiany orientacji w pobraniu
;ENDFOLD
;ENDFOLD
;FOLD ; 29.11.21 09:58 NAME: ini CHANGES: dodanie zapamietywania orientacji pobrania ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.comments.datetimecomment; Kuka.DateTime=29.11.21 09:58; Kuka.Name=ini; Kuka.Content=dodanie zapamietywania orientacji pobrania
;ENDFOLD
;ENDFOLD
;FOLD ; 29.11.21 13:09 NAME: ini CHANGES: odjazd po odlozeniu na Z=310 zeby wyrownac poziomy ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.comments.datetimecomment; Kuka.DateTime=29.11.21 13:09; Kuka.Name=ini; Kuka.Content=odjazd po odlozeniu na Z&eq/310 zeby wyrownac poziomy
;ENDFOLD
;ENDFOLD
;FOLD ; 29.11.21 14:34 NAME: ini CHANGES: zmiana wywoania wbicia wide na i_Wbij_Kolce ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.comments.datetimecomment; Kuka.DateTime=29.11.21 14:34; Kuka.Name=ini; Kuka.Content=zmiana wywoania wbicia wide na i_Wbij_Kolce
;ENDFOLD
;ENDFOLD
;FOLD ; 29.11.21 14:43 NAME: ini CHANGES: zerowanie Timera[1] przed wyjsciem z programu ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.comments.datetimecomment; Kuka.DateTime=29.11.21 14:43; Kuka.Name=ini; Kuka.Content=zerowanie Timera[1] przed wyjsciem z programu
;ENDFOLD
;ENDFOLD
;ENDFOLD ZMIANY

;FOLD INIT PROGRAMU

XHOME={A1 57,A2 -53.0000,A3 92.0000,A4 0,A5 51,A6 90,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
TOOL_DATA[1]={X 0.000000,Y 0.000000,Z 388.000000,A -0.000000,B -0.000000,C 0.000000}
TOOL_DATA[2]={X -6.124091,Y -0.006091,Z 522.000000,A -0.000000,B 0.000000,C 0.000000}
TOOL_DATA[3]={X 631.120273,Y 874.168253,Z 517.169826,A 0.000000,B -0.000000,C 0.000000}
TOOL_DATA[4]={X 631.120273,Y -874.168253,Z 517.169826,A 0.000000,B -0.000000,C 0.000000}
TOOL_NAME[1,]="TCP_WARSTWA"
TOOL_NAME[2,]="TCP_PALETA"
TOOL_NAME[3,]="TCP_KANT_PRAWY"
TOOL_NAME[4,]="TCP_KANT_LEWY"
BASE_DATA[1]={X 3614.0,Y -361.7,Z -1850.000000,A 90.000000,B -0.000000,C -0.000000}
BASE_DATA[2]={X 684.958486,Y 1622.387456,Z -1850.000000,A 90.000005,B -0.000000,C 0.000000}
BASE_DATA[3]={X -4014.095885,Y -2561.502940,Z -1000.003950,A 0.000000,B -0.000000,C 0.000000}
BASE_DATA[4]={X -1979.964821,Y -1.900569,Z -506.047363,A 0.000000,B -0.000000,C 0.000000}
BASE_TYPE[1]=#BASE
BASE_TYPE[2]=#BASE
BASE_TYPE[3]=#BASE
BASE_TYPE[4]=#BASE
BASE_NAME[1,]="NA_WPROST"
BASE_NAME[2,]="NA_LEWO"
BASE_NAME[3,]="ODLOZENIE"
BASE_NAME[4,]="STOS_PAL"

;ENDFOLD INIT

;FOLD Wybor PALETY PRZYPISANIE ORIENTACJI PRZEJAZDOWYCH DO POZYCJI
IF $FLAG[2] THEN
  BASE_DATA[1]={X 3614.0,Y -361.7,Z -1850.000000,A 90.000000,B -0.000000,C -0.000000}
  XTO_PIC={A1 57,A2 -67.41,A3 65.86,A4 0,A5 91.55, A6 90,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
  XTO_END={A1 57,A2 -67.41,A3 65.86,A4 0,A5 91.55, A6 0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
  XTO_DROOP={A1 61.0,A2 -71.4864,A3 71.54109,A4 0,A5 89.94566, A6 90,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
  XTO_DROOP_05={A1 60.0,A2 -47.4397,A3 98.87082,A4 0,A5 38.36889, A6 90}
ELSE
  BASE_DATA[1]=BASE_DATA[2]
  XTO_PIC={A1 57,A2 -67.41,A3 65.86,A4 0,A5 91.55, A6 0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
  XTO_END={A1 57,A2 -67.41,A3 65.86,A4 0,A5 91.55, A6 0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
  XTO_DROOP={A1 61,A2 -71.4864,A3 71.54109,A4 0,A5 89.94566, A6 5}
  XTO_DROOP_05={A1 60.0,A2 -47.4397,A3 98.87082,A4 0,A5 38.36889, A6 5}
ENDIF 
;ENDFOLD PRZYPISANIE POZ PRZEJAZDOWYCH

; Inicjacja pozycji nad stosem
XAbove_Point={X 575.0,Y 1200.0,Z 3050.0,A -180.0,B 0.0,C 180.0}

; POZYCJA DOMOWA
;FOLD PTP HOME  Vel= 100 % DEFAULT;%{PE}%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
$BWDSTART = FALSE
PDAT_ACT=PDEFAULT
FDAT_ACT=FHOME
BAS (#PTP_PARAMS,100 )
$H_POS=XHOME
PTP  XHOME
;ENDFOLD


;GRIP TEST_&_INIT
WAIT FOR (NOT $IN[144] AND  NOT $IN[143] AND NOT $CYCFLAG[1])
;FOLD Gripper SET [1]WIDLY State=[1]OPEN Wait 0.2[s] Check with No Check ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=1;setstate=1;setcont=nocont;waittime=0.2;errorstrategy=0
;ENDFOLD
GRPg_SetStateAndCheck(1, 1, 0.2, 0)
;ENDFOLD
;FOLD Gripper SET [2]Silowniki_scisku State=[1]OPEN Wait 0.2[s] Check with Strategy 1 ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=2;setstate=1;setcont=nocont;waittime=0.2;errorstrategy=1
;ENDFOLD
GRPg_SetStateAndCheck(2, 1, 0.2, 1)
;ENDFOLD
;FOLD Gripper SET [3]widly_paleta State=[1]OPEN Wait 0.2[s] Check with Strategy 1 ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=3;setstate=1;setcont=nocont;waittime=0.2;errorstrategy=1
;ENDFOLD
GRPg_SetStateAndCheck(3, 1, 0.2, 1)
;ENDFOLD
;FOLD Gripper SET [4]SERWO State=[1]OPEN Wait 0.2[s] Check with Strategy 1 ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=4;setstate=1;setcont=nocont;waittime=0.2;errorstrategy=1
;ENDFOLD
GRPg_SetStateAndCheck(4, 1, 0.2, 1)
;ENDFOLD


;FOLD START POMIARU CZASU CYKLU
$TIMER[1]=0
$TIMER_STOP[1]=FALSE
;ENDFOLD START POMIARU CZASU CYKLU
;*********************** 
;*****PETLA PRACY*******
;***********************
REPEAT


;$$$$$$$$$$$$$$$$$$$$$$$$$$$
;****** POBRANIE ***********
;$$$$$$$$$$$$$$$$$$$$$$$$$$$
;FOLD PTP TO_PIC CONT Vel=100 % PDATH Tool[1]:TCP_WARSTWA Base[0];%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=TO_PIC; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FTO_PIC
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XTO_PIC C_Dis
;ENDFOLD

;Inicjowane na wejsciu programu; KAT.A-nadpisywany w pobraniu
;FOLD PTP Above_Point CONT Vel=100 % PDATH Tool[1]:TCP_WARSTWA Base[1]:NA_WPROST;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=Above_Point; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FAbove_Point
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XAbove_Point C_Dis
;ENDFOLD

INTERRUPT ON 22;BRAKE MOVEMENT DIRECTION 
INTERRUPT ON 23;Slowedown

Fpozy2=FAbove_Point
Xpozy2={X 575.0,Y 1200.0,Z 0.0}
OVPRO_PRZED=$OV_PRO

Ruch_W_Dol(1.0) 
INTERRUPT OFF 23;Slowedown
INTERRUPT OFF 22;BRAKE MOVEMENT DIRECTION

$ADVANCE = 3

 
;PZYCJA POBRANIA
Fpozy2=FAbove_Point
Xpozy2=$POS_ACT
TOOL_DATA[1]={X 50,Y 0.000000,Z 388.000000,A -0.000000,B -0.000000,C 0.000000}

;Przeskok jesli aktywna jedna z krancowek aktywna
IF (( i_LewyKant) OR ( i_PrawyKant)) THEN
  GOTO LABEL2
ENDIF
INTERRUPT ON 25;Dojazd boczny
Ruch_W_Dol(0.5)

LABEL2:

INTERRUPT OFF 25;Dojazd boczny
$ADVANCE = 3


;ddddddddddddddddddd
; Transport Palety
;ddddddddddddddddddd
IF (($POS_ACT.Z <= 2) AND (NOT $IN[143])) THEN 

;FOLD PRZELOZENIE pustej Palety
;FOLD Gripper SET [3]widly_paleta State=[2]CLOSE Wait 0.2[s] Check with Strategy 1 ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=3;setstate=2;setcont=nocont;waittime=0.2;errorstrategy=1
;ENDFOLD
GRPg_SetStateAndCheck(3, 2, 0.2, 1)
;ENDFOLD

XPALLET_UP=$POS_ACT
XPALLET_UP.Z=XPALLET_UP.Z+200
XPALLET_UP.X=XPALLET_UP.X + ABS(of_toolX)
;FOLD LIN PALLET_UP Vel=0.5 m/s LDATM Tool[2]:TCP_PALETA Base[1]:NA_WPROST ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=PALLET_UP; Kuka.BlendingEnabled=False; Kuka.MoveDataName=LDATM; Kuka.VelocityPath=0.5; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=LIN
;ENDFOLD
$BWDSTART = FALSE
LDAT_ACT = LLDATM
FDAT_ACT = FPALLET_UP
BAS(#CP_PARAMS, 0.5)
SET_CD_PARAMS (0)
LIN XPALLET_UP
;ENDFOLD

XActualAxis=$AXIS_ACT
IF(XActualAxis.A6>45) THEN
XPAL_PREPARE=XPALLET_UP
XPAL_PREPARE.Z=XPAL_PREPARE.Z+200
XPAL_PREPARE.A=XPAL_PREPARE.A - 90
XPAL_PREPARE.T=41
;FOLD PTP PAL_PREPARE CONT Vel=100 % PDATH Tool[2]:TCP_PALETA Base[1]:NA_WPROST;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=PAL_PREPARE; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FPAL_PREPARE
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XPAL_PREPARE C_Dis
;ENDFOLD
ENDIF

XPAL_ABOVE={Z 3000.0}
;FOLD PTP PAL_ABOVE CONT Vel=100 % PDATH Tool[2]:TCP_PALETA Base[1]:NA_WPROST;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=PAL_ABOVE; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FPAL_ABOVE
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XPAL_ABOVE C_Dis
;ENDFOLD

XSTOCK_ABOVE={X 0.0,Y 0.0,Z 1650.0,A 0.0,B 0.0,C 180.0,S 2, T 43}
;FOLD PTP STOCK_ABOVE CONT Vel=100 % PDATH Tool[2]:TCP_PALETA Base[4]:STOS_PAL;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=STOCK_ABOVE; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FSTOCK_ABOVE
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XSTOCK_ABOVE C_Dis
;ENDFOLD

;Odlozenie palety
XPAL_DROOP={X 0.0,Y 0.0,Z 160.0,A 0.0,B 0.0,C 180.0,S 2, T 43}
;FOLD LIN PAL_DROOP Vel=1 m/s LDATM Tool[2]:TCP_PALETA Base[4]:STOS_PAL ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=PAL_DROOP; Kuka.BlendingEnabled=False; Kuka.MoveDataName=LDATM; Kuka.VelocityPath=1; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=LIN
;ENDFOLD
$BWDSTART = FALSE
LDAT_ACT = LLDATM
FDAT_ACT = FPAL_DROOP
BAS(#CP_PARAMS, 1.0)
SET_CD_PARAMS (0)
LIN XPAL_DROOP
;ENDFOLD

;FOLD Gripper SET [3]widly_paleta State=[1]OPEN Wait 0.2[s] Check with Strategy 1 ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=3;setstate=1;setcont=nocont;waittime=0.2;errorstrategy=1
;ENDFOLD
GRPg_SetStateAndCheck(3, 1, 0.2, 1)
;ENDFOLD       

XPAL_POST_DROOP=$POS_ACT
XPAL_POST_DROOP.Z=XPAL_POST_DROOP.Z+100
;FOLD LIN PAL_POST_DROOP Vel=1 m/s LDATM Tool[2]:TCP_PALETA Base[4]:STOS_PAL ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=PAL_POST_DROOP; Kuka.BlendingEnabled=False; Kuka.MoveDataName=LDATM; Kuka.VelocityPath=1; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=LIN
;ENDFOLD
$BWDSTART = FALSE
LDAT_ACT = LLDATM
FDAT_ACT = FPAL_POST_DROOP
BAS(#CP_PARAMS, 1.0)
SET_CD_PARAMS (0)
LIN XPAL_POST_DROOP
;ENDFOLD

;FOLD PTP STOCK_ABOVE CONT Vel=100 % PDATH Tool[2]:TCP_PALETA Base[4]:STOS_PAL;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=STOCK_ABOVE; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FSTOCK_ABOVE
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XSTOCK_ABOVE C_Dis
;ENDFOLD

;FOLD PTP TO_END CONT Vel=100 % PDATH Tool[1]:TCP_WARSTWA Base[0];%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=TO_END; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FTO_END
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XTO_END C_Dis
;ENDFOLD

;ENDFOLD PRZELOZENIE pustej Palety

;Skok do zakonczenia programu po odlozeniu palety
GOTO LABEL1

;ddddddddddddddddddd
;ENDIF Trans. Palety 
;ddddddddddddddddddd
ENDIF


;((((((((((((((((((((((((((((((((((((((((((((((
INTERRUPT ON 26;STOP_ROTATION
INTERRUPT ON 27;STOP_ROTATION
;FOLD OBROT DOPASOWANIA DO WARSTWY
IF ((NOT i_LewyKant) AND ( i_PrawyKant)) THEN
  OBROT_DOPASOWANIA(4,1,{A -5.0,B 0.0,C 0.0 })
ELSE
  IF (( i_LewyKant) AND  (NOT i_PrawyKant)) THEN
    OBROT_DOPASOWANIA(3,1,{A 5.0,B 0.0,C 0.0 })
  ENDIF
ENDIF
;ENDFOLD //dopasowanie do warstwy//
INTERRUPT OFF 26;STOP_ROTATION
INTERRUPT OFF 27;STOP_ROTATION
$ADVANCE = 3

;Test pozycji nieruch. czesci chwytaka
WAIT FOR (i_LewyKant AND i_PrawyKant) 

;((((((((((((((((((((((((((((((((((((((((((((((

;FOLD Gripper SET [4]SERWO State=[2]CLOSE Wait 0.2[s] Check with Strategy 1 ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=4;setstate=2;setcont=nocont;waittime=0.2;errorstrategy=1
;ENDFOLD
GRPg_SetStateAndCheck(4, 2, 0.2, 1)
;ENDFOLD
;FOLD Gripper SET [2]Silowniki_scisku State=[2]CLOSE Wait 0.2[s] Check with No Check ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=2;setstate=2;setcont=nocont;waittime=0.2;errorstrategy=0
;ENDFOLD
GRPg_SetStateAndCheck(2, 2, 0.2, 0)
;ENDFOLD
IF ( i_Wbij_Kolce ) THEN ;Wbicie kolcy w welne
;FOLD Gripper SET [1]WIDLY State=[2]CLOSE Wait 0.2[s] Check with No Check ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=1;setstate=2;setcont=nocont;waittime=0.2;errorstrategy=0
;ENDFOLD
GRPg_SetStateAndCheck(1, 2, 0.2, 0)
;ENDFOLD
ENDIF

;Przywrocenie predkosci
$OV_PRO = OVPRO_PRZED

;WLACZENIE KONTROI CZESCI W CHYTAKU
INTERRUPT ON 24;

;FOLD TEST BEZPIECZNEJ WYSOKOSCI ODJAZDU NAD STOS
;Przyw.ukladu odniesienia robota
FDAT_ACT = FPOS_x_offset
BAS (#PTP_PARAMS,100 )

XPOST_PIC = $POS_ACT
IF ((XPOST_PIC.Z)<(XAbove_Point.Z-100)) THEN
  XPOST_PIC.Z = XPOST_PIC.Z + 100 
ELSE
  XPOST_PIC.Z = XAbove_Point.Z 
ENDIF
;ENDFOLD BEZP.POZ.ODJ.NAD STOS

;NADPISANIE KATA.A STOSU
XAbove_Point.A=XPOST_PIC.A

;Powolny odjazd
;FOLD LIN POST_PIC Vel=0.5 m/s LDATM Tool[1]:TCP_WARSTWA Base[1]:NA_WPROST ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=POST_PIC; Kuka.BlendingEnabled=False; Kuka.MoveDataName=LDATM; Kuka.VelocityPath=0.5; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=LIN
;ENDFOLD
$BWDSTART = FALSE
LDAT_ACT = LLDATM
FDAT_ACT = FPOST_PIC
BAS(#CP_PARAMS, 0.5)
SET_CD_PARAMS (0)
LIN XPOST_PIC
;ENDFOLD


;Sprawdzenie obecnosci czesci
;FOLD WAIT FOR ( IN 144 'zwolnij' );%{PE}%R 8.5.19,%MKUKATPBASIS,%CEXT_WAIT_FOR,%VEXT_WAIT_FOR,%P 2:, 4:, 5:$IN, 6:144, 7:zwolnij, 9:
WAIT FOR  ( $IN[144] ) 
;ENDFOLD

;FOLD PTP Above_Point CONT Vel=100 % PDATH Tool[1]:TCP_WARSTWA Base[1]:NA_WPROST;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=Above_Point; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FAbove_Point
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XAbove_Point C_Dis
;ENDFOLD
;$$$$$$$$$$$$$$$$$$$$$$$$$$$
;** KONIEC POBRANIA ********
;$$$$$$$$$$$$$$$$$$$$$$$$$$$



;//////////////////////// 
;*****DO ODLOZENIA*******
;////////////////////////
;FOLD PTP TO_DROOP CONT Vel=100 % PDATH Tool[1]:TCP_WARSTWA Base[3]:ODLOZENIE;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=TO_DROOP; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FTO_DROOP
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XTO_DROOP C_Dis
;ENDFOLD
;FOLD PTP TO_DROOP_05 CONT Vel=100 % PDATH Tool[1]:TCP_WARSTWA Base[3]:ODLOZENIE;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=TO_DROOP_05; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FTO_DROOP_05
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XTO_DROOP_05 C_Dis
;ENDFOLD

XPRE_DROP={X 2800.0,Y 0.0,Z 310.0,A 90.0,B 0.0,C 180.0}
;FOLD PTP PRE_DROP CONT Vel=100 % PDATH Tool[1]:TCP_WARSTWA Base[3]:ODLOZENIE ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=PRE_DROP; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FPRE_DROP
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XPRE_DROP C_Dis
;ENDFOLD

;Odlozenie
XDROP={X 2800.0,Y 0.0,Z 160.0,A 90.0,B 0.0,C 180.0}
;FOLD LIN DROP Vel=0.5 m/s LDATM Tool[1]:TCP_WARSTWA Base[3]:ODLOZENIE ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=DROP; Kuka.BlendingEnabled=False; Kuka.MoveDataName=LDATM; Kuka.VelocityPath=0.5; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=LIN
;ENDFOLD
$BWDSTART = FALSE
LDAT_ACT = LLDATM
FDAT_ACT = FDROP
BAS(#CP_PARAMS, 0.5)
SET_CD_PARAMS (0)
LIN XDROP
;ENDFOLD

;Otwarcie chwytaka
;FOLD Gripper SET [1]WIDLY State=[1]OPEN Wait 0.2[s] Check with No Check ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=1;setstate=1;setcont=nocont;waittime=0.2;errorstrategy=0
;ENDFOLD
GRPg_SetStateAndCheck(1, 1, 0.2, 0)
;ENDFOLD
;FOLD Gripper SET [2]Silowniki_scisku State=[1]OPEN Wait 0.2[s] Check with Strategy 1 ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=2;setstate=1;setcont=nocont;waittime=0.2;errorstrategy=1
;ENDFOLD
GRPg_SetStateAndCheck(2, 1, 0.2, 1)
;ENDFOLD
;FOLD Gripper SET [4]SERWO State=[1]OPEN Wait 0.2[s] Check with Strategy 1 ;%{PE}
;FOLD Parameters Parameters ;%{h}
;Params IlfProvider=GripperTech.GripperSet;setgripper=4;setstate=1;setcont=nocont;waittime=0.2;errorstrategy=1
;ENDFOLD
GRPg_SetStateAndCheck(4, 1, 0.2, 1)
;ENDFOLD

INTERRUPT OFF 24; PART CONTROL

;Odjazd w bok
XDROP_x_offset=XDROP
XDROP_x_offset.z=xdrop_x_offset.z+10
TOOL_DATA[1]={X 0.000000,Y 0.000000,Z 388.000000,A -0.000000,B -0.000000,C 0.000000}
;FOLD LIN DROP_x_offset CONT Vel=0.5 m/s LDATL Tool[1]:TCP_WARSTWA Base[3]:ODLOZENIE ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=DROP_x_offset; Kuka.BlendingEnabled=True; Kuka.MoveDataName=LDATL; Kuka.VelocityPath=0.5; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=LIN
;ENDFOLD
$BWDSTART = FALSE
LDAT_ACT = LLDATL
FDAT_ACT = FDROP_x_offset
BAS(#CP_PARAMS, 0.5)
SET_CD_PARAMS (0)
LIN XDROP_x_offset C_Dis C_Dis
;ENDFOLD

;odjazd w pionie
xpost_drop=xdrop
xpost_drop.z=xdrop.z+150
;FOLD LIN POST_DROP Vel=1 m/s LDATH Tool[1]:TCP_WARSTWA Base[3]:ODLOZENIE ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=POST_DROP; Kuka.BlendingEnabled=False; Kuka.MoveDataName=LDATH; Kuka.VelocityPath=1; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=LIN
;ENDFOLD
$BWDSTART = FALSE
LDAT_ACT = LLDATH
FDAT_ACT = FPOST_DROP
BAS(#CP_PARAMS, 1.0)
SET_CD_PARAMS (0)
LIN XPOST_DROP
;ENDFOLD

;Sprawdzenie braku czesci
IF $IN[143] THEN 
;FOLD WAIT FOR ( NOT IN 143 '' );%{PE}%R 8.3.22,%MKUKATPBASIS,%CEXT_WAIT_FOR,%VEXT_WAIT_FOR,%P 2:, 4:NOT, 5:$IN, 6:143, 7:, 9:
WAIT FOR  ( NOT $IN[143] ) 
;ENDFOLD
ENDIF  
 
;FOLD PTP PRE_DROP Vel=100 % PDATH Tool[1]:TCP_WARSTWA Base[3]:ODLOZENIE;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=PRE_DROP; Kuka.BlendingEnabled=False; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FPRE_DROP
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XPRE_DROP
;ENDFOLD
;//////////////////////////// 
;*****KONIEC ODLOZENIA*******
;////////////////////////////

;FOLD POMIAR CZASU CYKLU TIMER[1] zapis do TIMER[2]
$TIMER_STOP[1]=TRUE
$TIMER[2]=$TIMER[1]
$TIMER[1]=0
$TIMER_STOP[1]=FALSE
;ENDFOLD Pomiarczasu cyklu
;*****KONIEC PETLA PRACY*******
;TEST FLAGI[1]
;***********************
UNTIL ($FLAG[1])


; Przeskok z odlozenia palety
LABEL1:

  
;FOLD PTP END_POINT CONT Vel=100 % PDATH Tool[1]:TCP_WARSTWA Base[0];%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=END_POINT; Kuka.BlendingEnabled=True; Kuka.MoveDataPtpName=PDATH; Kuka.VelocityPtp=100; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PPDATH
FDAT_ACT = FEND_POINT
BAS(#PTP_PARAMS, 100.0)
SET_CD_PARAMS (0)
PTP XEND_POINT C_Dis
;ENDFOLD

;FOLD WYZEROWANIE TIMERA
$TIMER_STOP[1]=TRUE
$TIMER[1]=0
;ENDFOLD zerowanie timeta[1]

;FOLD PTP HOME Vel=10 % DEFAULT ;%{PE}
;FOLD Parameters ;%{h}
;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.old; Kuka.IsGlobalPoint=False; Kuka.PointName=HOME; Kuka.BlendingEnabled=False; Kuka.MoveDataPtpName=DEFAULT; Kuka.VelocityPtp=10; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=PTP
;ENDFOLD
$BWDSTART = FALSE
PDAT_ACT = PDEFAULT
FDAT_ACT = FHOME
BAS(#PTP_PARAMS, 10.0)
SET_CD_PARAMS (0)
PTP XHOME
;ENDFOLD

END
DEF Ruch_W_Dol(SPEED:IN) 
DECL REAL SPEED

$BWDSTART = FALSE
LDAT_ACT=LLDAT0
;FDAT_ACT=Fpozy2
BAS(#CP_PARAMS,SPEED)
LIN Xpozy2 

$ADVANCE = 0
END
DEF IR_MOVESTOP()
  INTERRUPT OFF 22 ;BRAKE MOVEMENT DIRECTION
  INTERRUPT OFF 23 ;Slowedown
  INTERRUPT OFF 25 ;Dojazd boczny
  INTERRUPT OFF 26 ;Stop rotacji
  INTERRUPT OFF 27 ;Stop rotacji
    BRAKE
    RESUME
;  HALT ; Dla testu odkomentowac
END
DEF IR_SLOWDOWN()
  INTERRUPT OFF 23  ;dla zwolnienia predkosci robota
  $OV_PRO = 0.3*$OV_PRO    ;Wartosc predkosci po wykryciu elementu  
;  HALT ; Dla testu odkomentowac
END
DEF PART_CONTROL()
  BRAKE
  WAIT FOR i_Zwolnij 
END
DEF  OBROT_DOPASOWANIA( REQ_TOOL:IN, REQ_BASE:IN, ROT_BASE:IN)
;FOLD OBROT_DOPASOWANIA
; Incoming data  
DECL INT REQ_TOOL ;TOOL
DECL INT REQ_BASE ;BASE
DECL FRAME ROT_BASE ;ROTATION
   
; Runtime access data
DECL E6POS XWORK_POS
FWORK_FDATA.TOOL_NO = REQ_TOOL
FWORK_FDATA.BASE_NO = REQ_BASE

;***************************************

;Read the current position
FDAT_ACT=FWORK_FDATA
$BWDSTART = FALSE
BAS(#CP_PARAMS,1)
XWORK_POS=$POS_ACT

;Test
IF (ROT_BASE.A<>0)THEN
  XWORK_POS.A = XWORK_POS.A + ROT_BASE.A
ELSE
  WAIT FOR FALSE
ENDIF

;***************************************

;Movement to detect correct orientation  
$BWDSTART = FALSE
LDAT_ACT = LLDATrad
BAS(#CP_PARAMS,1)
;FDAT_ACT = FWORK_FDATA
LIN XWORK_POS

;Interpolation set
$ADVANCE = 0
;ENDFOLD FUNCTION

END 